/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SimpleDEX, SimpleDEXInterface } from "../../contracts/SimpleDEX";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "AddLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isAtoB",
        type: "bool",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceAtoB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lpAmount",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapAForB",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapBForA",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenA",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenB",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ce338038062001ce383398101604081905262000034916200029d565b336040518060400160405280600c81526020016b053696d706c654445582d4c560a41b815250604051806040016040528060038152602001620534c560ec1b81525081600390816200008791906200037a565b5060046200009682826200037a565b5050506001600160a01b038116620000c957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000d4816200022e565b506001600160a01b038216620001375760405162461bcd60e51b815260206004820152602160248201527f53696d706c654445583a20544f4b454e415f49535f5a45524f5f4144445245536044820152605360f81b6064820152608401620000c0565b6001600160a01b038116620001995760405162461bcd60e51b815260206004820152602160248201527f53696d706c654445583a20544f4b454e425f49535f5a45524f5f4144445245536044820152605360f81b6064820152608401620000c0565b806001600160a01b0316826001600160a01b031603620001fc5760405162461bcd60e51b815260206004820152601e60248201527f53696d706c654445583a204944454e544943414c5f41444452455353455300006044820152606401620000c0565b600680546001600160a01b039384166001600160a01b0319918216179091556007805492909316911617905562000446565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200029857600080fd5b919050565b60008060408385031215620002b157600080fd5b620002bc8362000280565b9150620002cc6020840162000280565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200030057607f821691505b6020821081036200032157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200037557600081815260208120601f850160051c81016020861015620003505750805b601f850160051c820191505b8181101562000371578281556001016200035c565b5050505b505050565b81516001600160401b03811115620003965762000396620002d5565b620003ae81620003a78454620002eb565b8462000327565b602080601f831160018114620003e65760008415620003cd5750858301515b600019600386901b1c1916600185901b17855562000371565b600085815260208120601f198616915b828110156200041757888601518255948401946001909101908401620003f6565b5085821015620004365787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61188d80620004566000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063a9059cbb1161007c578063a9059cbb146102a4578063dc5fa6c5146102b7578063dd62ed3e146102c0578063e1d3be6b146102f9578063e619a49814610301578063f2fde38b1461031457600080fd5b8063715018a61461025b5780638da5cb5b1461026557806395d89b41146102765780639c8f9f231461027e5780639cd441da1461029157600080fd5b806318160ddd1161010a57806318160ddd146101ec57806319e36f3b146101f457806323b872dd146101fd578063313ce567146102105780635f64b55b1461021f57806370a082311461023257600080fd5b8063031020911461014757806306fdde031461016d5780630902f1ac14610182578063095ea7b31461019e5780630fc63d10146101c1575b600080fd5b61015a610155366004611531565b610327565b6040519081526020015b60405180910390f35b610175610550565b604051610164919061154a565b6008546009545b60408051928352602083019190915201610164565b6101b16101ac3660046115af565b6105e2565b6040519015158152602001610164565b6006546101d4906001600160a01b031681565b6040516001600160a01b039091168152602001610164565b60025461015a565b61015a60095481565b6101b161020b3660046115d9565b6105fc565b60405160128152602001610164565b6007546101d4906001600160a01b031681565b61015a610240366004611615565b6001600160a01b031660009081526020819052604090205490565b610263610620565b005b6005546001600160a01b03166101d4565b610175610634565b61018961028c366004611531565b610643565b61015a61029f366004611630565b610885565b6101b16102b23660046115af565b610e11565b61015a60085481565b61015a6102ce366004611652565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61015a610e1f565b61015a61030f366004611531565b610e77565b610263610322366004611615565b61108d565b60008082116103515760405162461bcd60e51b815260040161034890611685565b60405180910390fd5b600060085411801561036557506000600954115b6103815760405162461bcd60e51b8152600401610348906116c9565b600061038f836103e5611720565b9050806008546103e86103a29190611720565b6103ac9190611737565b6009546103b99083611720565b6103c3919061174a565b9150600082116103e55760405162461bcd60e51b81526004016103489061176c565b6006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610419903390309088906004016117b1565b6020604051808303816000875af1158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c91906117d5565b5060075460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d291906117d5565b5082600860008282546104e59190611737565b9250508190555081600960008282546104fe91906117f7565b9091555050604080518481526020810184905260019181019190915233907fcc65e4d9060ece2ecf63011ac580550b04c8daeba63fac4dfe8669353cd88859906060015b60405180910390a250919050565b60606003805461055f9061180a565b80601f016020809104026020016040519081016040528092919081815260200182805461058b9061180a565b80156105d85780601f106105ad576101008083540402835291602001916105d8565b820191906000526020600020905b8154815290600101906020018083116105bb57829003601f168201915b5050505050905090565b6000336105f08185856110cb565b60019150505b92915050565b60003361060a8582856110dd565b61061585858561115c565b506001949350505050565b6106286111bb565b61063260006111e8565b565b60606004805461055f9061180a565b600080600083116106665760405162461bcd60e51b8152600401610348906116c9565b600061067160025490565b905080600854856106829190611720565b61068c919061174a565b9250806009548561069d9190611720565b6106a7919061174a565b91506000831180156106b95750600082115b6107165760405162461bcd60e51b815260206004820152602860248201527f53696d706c654445583a20494e53554646494349454e545f4c495155494449546044820152671657d0955493915160c21b6064820152608401610348565b610720338561123a565b60065460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610771573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079591906117d5565b5060075460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156107e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080b91906117d5565b50826008600082825461081e91906117f7565b92505081905550816009600082825461083791906117f7565b9091555050604080518481526020810184905290810185905233907f59c3a0b60c6ab7deb62e1440c9e72441db6db7dfe514dba8cb18e60c0d896efa9060600160405180910390a250915091565b600080831180156108965750600082115b6108b25760405162461bcd60e51b815260040161034890611685565b600654604051636eb1769f60e11b815233600482015230602482015284916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610900573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610924919061183e565b10156109725760405162461bcd60e51b815260206004820181905260248201527f53696d706c654445583a20616c6c6f77616e636541206e6f7420656e6f7567686044820152606401610348565b600754604051636eb1769f60e11b815233600482015230602482015283916001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156109c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e4919061183e565b1015610a325760405162461bcd60e51b815260206004820181905260248201527f53696d706c654445583a20616c6c6f77616e636542206e6f7420656e6f7567686044820152606401610348565b6006546040516370a0823160e01b815233600482015284916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e919061183e565b1015610aec5760405162461bcd60e51b815260206004820152601e60248201527f53696d706c654445583a2062616c616e636541206e6f7420656e6f75676800006044820152606401610348565b6007546040516370a0823160e01b815233600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b58919061183e565b1015610ba65760405162461bcd60e51b815260206004820152601e60248201527f53696d706c654445583a2062616c616e636542206e6f7420656e6f75676800006044820152606401610348565b6006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610bda903390309088906004016117b1565b6020604051808303816000875af1158015610bf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1d91906117d5565b506007546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610c52903390309087906004016117b1565b6020604051808303816000875af1158015610c71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9591906117d5565b506000610ca160025490565b905080600003610cf2576103e8610cc0610cbb8587611720565b611274565b610cca91906117f7565b600885905560098490559150610ce360016103e86112e4565b610ced33836112e4565b610dc7565b600854610d2990610d038387611720565b610d0d919061174a565b600954610d1a8487611720565b610d24919061174a565b61131a565b915060008211610d8c5760405162461bcd60e51b815260206004820152602860248201527f53696d706c654445583a20494e53554646494349454e545f4c495155494449546044820152671657d3525395115160c21b6064820152608401610348565b8360086000828254610d9e9190611737565b925050819055508260096000828254610db79190611737565b90915550610dc7905033836112e4565b604080518581526020810185905290810183905233907fbeb3885786d637a474cbc287c0a44587231633a077f0bd30354d5a4b18996fce9060600160405180910390a25092915050565b6000336105f081858561115c565b600080600854118015610e3457506000600954115b610e505760405162461bcd60e51b8152600401610348906116c9565b600854600954610e6890670de0b6b3a7640000611720565b610e72919061174a565b905090565b6000808211610e985760405162461bcd60e51b815260040161034890611685565b6000600854118015610eac57506000600954115b610ec85760405162461bcd60e51b8152600401610348906116c9565b6000610ed6836103e5611720565b9050806009546103e8610ee99190611720565b610ef39190611737565b600854610f009083611720565b610f0a919061174a565b915060008211610f2c5760405162461bcd60e51b81526004016103489061176c565b6007546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610f60903390309088906004016117b1565b6020604051808303816000875af1158015610f7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa391906117d5565b5060065460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610ff5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101991906117d5565b50826009600082825461102c9190611737565b92505081905550816008600082825461104591906117f7565b9091555050604080518481526020810184905260009181019190915233907fcc65e4d9060ece2ecf63011ac580550b04c8daeba63fac4dfe8669353cd8885990606001610542565b6110956111bb565b6001600160a01b0381166110bf57604051631e4fbdf760e01b815260006004820152602401610348565b6110c8816111e8565b50565b6110d88383836001611332565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015611156578181101561114757604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610348565b61115684848484036000611332565b50505050565b6001600160a01b03831661118657604051634b637e8f60e11b815260006004820152602401610348565b6001600160a01b0382166111b05760405163ec442f0560e01b815260006004820152602401610348565b6110d8838383611407565b6005546001600160a01b031633146106325760405163118cdaa760e01b8152336004820152602401610348565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661126457604051634b637e8f60e11b815260006004820152602401610348565b61127082600083611407565b5050565b600060038211156112d5575080600061128e60028361174a565b611299906001611737565b90505b818110156112cf579050806002816112b4818661174a565b6112be9190611737565b6112c8919061174a565b905061129c565b50919050565b81156112df575060015b919050565b6001600160a01b03821661130e5760405163ec442f0560e01b815260006004820152602401610348565b61127060008383611407565b6000818310611329578161132b565b825b9392505050565b6001600160a01b03841661135c5760405163e602df0560e01b815260006004820152602401610348565b6001600160a01b03831661138657604051634a1406b160e11b815260006004820152602401610348565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561115657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113f991815260200190565b60405180910390a350505050565b6001600160a01b0383166114325780600260008282546114279190611737565b909155506114a49050565b6001600160a01b038316600090815260208190526040902054818110156114855760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610348565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166114c0576002805482900390556114df565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161152491815260200190565b60405180910390a3505050565b60006020828403121561154357600080fd5b5035919050565b600060208083528351808285015260005b818110156115775785810183015185820160400152820161155b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146112df57600080fd5b600080604083850312156115c257600080fd5b6115cb83611598565b946020939093013593505050565b6000806000606084860312156115ee57600080fd5b6115f784611598565b925061160560208501611598565b9150604084013590509250925092565b60006020828403121561162757600080fd5b61132b82611598565b6000806040838503121561164357600080fd5b50508035926020909101359150565b6000806040838503121561166557600080fd5b61166e83611598565b915061167c60208401611598565b90509250929050565b60208082526024908201527f53696d706c654445583a20494e53554646494349454e545f494e5055545f414d60408201526313d5539560e21b606082015260800190565b60208082526021908201527f53696d706c654445583a20494e53554646494349454e545f4c495155494449546040820152605960f81b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105f6576105f661170a565b808201808211156105f6576105f661170a565b60008261176757634e487b7160e01b600052601260045260246000fd5b500490565b60208082526025908201527f53696d706c654445583a20494e53554646494349454e545f4f55545055545f416040820152641353d5539560da1b606082015260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156117e757600080fd5b8151801515811461132b57600080fd5b818103818111156105f6576105f661170a565b600181811c9082168061181e57607f821691505b6020821081036112cf57634e487b7160e01b600052602260045260246000fd5b60006020828403121561185057600080fd5b505191905056fea26469706673582212204266f2d01bb94ab35b175a4e03999dbcf79822343b0001b25b396652aad452bb64736f6c63430008140033";

type SimpleDEXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleDEXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleDEX__factory extends ContractFactory {
  constructor(...args: SimpleDEXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenA: AddressLike,
    _tokenB: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tokenA, _tokenB, overrides || {});
  }
  override deploy(
    _tokenA: AddressLike,
    _tokenB: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenA, _tokenB, overrides || {}) as Promise<
      SimpleDEX & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleDEX__factory {
    return super.connect(runner) as SimpleDEX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleDEXInterface {
    return new Interface(_abi) as SimpleDEXInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleDEX {
    return new Contract(address, _abi, runner) as unknown as SimpleDEX;
  }
}
